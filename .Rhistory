knitr::opts_chunk$set(warning = F, results = "markup", message = F)
options(scientific=T, digits = 3)
library(ggplot2)
library(dplyr)
library(tidyr)
library(RColorBrewer)
library(lubridate)
library(ezids)
library(sf)
bike <- read.csv("bo.csv")
str(bike)
head(bike, n=4)
print(paste(sum(is.na(bike)), "number of NA in the data"))
sapply(bike, function(y) sum(length(which(is.na(y)))))
# change rideable_type/ member_casual to factor
#there three numbers under the factor rideable_type needs to look into!
bike$rideable_type <- factor(bike$rideable_type)
bike$member_casual <- factor(bike$member_casual)
# split started_at/ ended_at to date column and time column
# change start_date/end_date to date type
bike$start_time <- format(as.POSIXct(bike$started_at), format = "%H:%M:%S")
bike$end_time <- format(as.POSIXct(bike$ended_at), format = "%H:%M:%S")
bike$start_date <- as.Date(bike$started_at)
bike$end_date <- as.Date(bike$ended_at)
# Check the structure again
str(bike)
bike %>% count(member_casual)
ggplot(bike, aes(member_casual, fill = member_casual))+
geom_bar()+
scale_fill_brewer(palette = "BuPu")+
guides(fill="none")+
labs(title = "User membersip types", x= "types of memebership")+
theme_classic()
ggplot(bike, aes(rideable_type, fill = rideable_type))+
geom_bar()+
scale_fill_brewer(palette = "BuPu")+
guides(fill="none")+
labs(title = "Types of used biks", x = "")+
theme_classic()
# grouping types of users and counting their used bike type without counting docked_bike because it is only 3 users
members_preferance <- bike %>% group_by(member_casual, rideable_type)%>%
filter(rideable_type != "docked_bike")%>%
summarise(used = n())
print(members_preferance)
ggplot(members_preferance, aes(x= member_casual,y = used , fill = rideable_type))+
geom_bar(position='dodge', stat='identity')+
scale_fill_brewer(palette = "BuPu")+
labs(title = "Most used bike type to user", x= "type of user", y="")+
theme_classic()
#the probability of each user to pick this type of bike
rieds = table(bike$member_casual, bike$rideable_type)
xkabledply(round(rieds,2), title="Contingency table for bike type vs User membership")
#I think I can do chi-square in here
chisq.test(rieds)
#extrat only the day and convert it to day of the week
bike$days <- format(bike$start_date, format = "%a")
#convert it to a factor and organize the days order
bike$days <- factor(bike$days, levels = c("Sat", "Sun", "Mon", "Tue", "Wed", "Thu", "Fri" ))
ggplot(bike, aes(days, fill = days))+
geom_bar()+
scale_fill_brewer(palette = "BuPu")+
guides(fill="none")+
labs(title = "Number of users in the days of the week", x="Days of the week")+
theme_classic()
#get only the hour from the time
bike$hour <- NA
bike$hour <- hour(bike$started_at)
sum_hour <- bike %>%
group_by(hour) %>%
summarise(sum_hour = length(hour))
ggplot(sum_hour, aes(hour, sum_hour ))+
geom_line(color = "#8C6BB1", size = 1) +
geom_point(color = "#8C96C6", size = 2) +
scale_x_continuous(breaks=seq(0,23,1))+
labs(title="Use by hour", y = "")+
theme_classic()
sum_hour <- bike %>%
group_by(days, hour)%>% summarise(count = n())
ggplot(data = sum_hour, aes(x = hour, y = count,  color = days))+
geom_point() + geom_line(aes(group = 1))+
facet_grid(rows = vars(days))+
scale_color_manual(values=c("#BFD3E6", "#9EBCDA" ,"#8C96C6" ,"#8C6BB1", "#88419D", "#810F7C", "#4D004B"))+
labs(title= "Use by day and hour")+
scale_y_continuous(breaks=seq(0,130,50))+
scale_x_continuous(breaks=seq(0,23,1))+
theme(
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank()
)
#subset without the na
end_station <- subset(bike, (!is.na(bike[,11])) & (!is.na(bike[,12])))
library(ggmap)
register_google(key = )
#end station
bikemap <-ggmap(get_googlemap(center = c(lon = -82.99879, lat=	39.96118),
maptype = 'terrain',
color = "color",
zoom = 11))
#Load modified data with the pricing and distance
pric <- read.csv("202207-cogo-tripdata.csv")
price <- subset(pric,select=c(member_casual, Pricing, TimeDiff, rideable_type))
casual_price <- subset(price,member_casual == "casual")
round(summary(casual_price$Pricing),2)
ggplot(casual_price,aes(Pricing))+
geom_histogram(fill = "#8C6BB1", alpha=.5, bins = 30, na.rm = T)+
labs(title = "Casual customesr payments")+
theme_classic()
ggplot(casual_price, aes(rideable_type, Pricing))+
geom_boxplot(outlier.colour = "#810F7C", na.rm =T)+
scale_fill_brewer(palette = "BuPu")+
guides(fill="none")+
expand_limits(y = 2)+
labs(title = "Check the outliers comparaing to bike type", x = "")+
theme_classic()
narm_pr<-outlierKD2(casual_price, Pricing, histogram = T)
nprice <- nrow(price)
nrmprice <- nrow(narm_pr)
#the mode function
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
payment <- narm_pr%>%
group_by(rideable_type)%>%
summarise(sum_price = round(sum(Pricing),2),
mean_price = round(mean(Pricing),2),
mode_price = getmode(Pricing))
xkabledply(payment)
install.packages("rmdformats")
library(rmdformats)
knitr::opts_chunk$set(echo = TRUE)
bike <- data.frame(read.csv("bo.csv"))
bike$rideable_type <- factor(bike$rideable_type)
bike$member_casual <- factor(bike$member_casual)
# split started_at/ ended_at to date column and time column
# change start_date/end_date to date type
bike$start_time <- format(as.POSIXct(bike$started_at), format = "%H:%M")
bike$end_time <- format(as.POSIXct(bike$ended_at), format = "%H:%M")
bike$start_date <- as.Date(bike$started_at)
bike$end_date <- as.Date(bike$ended_at)
bike$Total_Time <- round(as.numeric(difftime(bike$end_time, bike$start_time, units = "mins")),2)
bike <- data.frame(read.csv("bo.csv"))
bike$rideable_type <- factor(bike$rideable_type)
bike$member_casual <- factor(bike$member_casual)
# split started_at/ ended_at to date column and time column
# change start_date/end_date to date type
bike$start_time <- format(as.POSIXct(bike$started_at), format = "%H:%M")
bike$end_time <- format(as.POSIXct(bike$ended_at), format = "%H:%M")
bike$start_date <- as.Date(bike$started_at)
bike$end_date <- as.Date(bike$ended_at)
bike$Startedat = as.POSIXct(bike$started_at, format = "%Y-%m-%d %H:%M:%S")
bike$enddat = as.POSIXct(bike$ended_at, format = "%Y-%m-%d %H:%M:%S")
bike$Total_Time <- round(as.numeric(difftime(bike$enddat, bike$Startedat, units = "mins")),2)
delete?
drop <- c('Startedat', 'enddat', 'started_at', 'ended_at')
drop <- c('Startedat','enddat','started_at','ended_at')
df <- bike[,!(names(bike) %in% drop)]
drop <- c('Startedat','enddat','started_at','ended_at', 'start_station_name', 'end_station_name', 'start_lat', 'end_lat', 'start_lng','end_lng')
df <- bike[,!(names(bike) %in% drop)]
agesurvive = xtabs(~ member_casual + rideable_type, data = df)
chisq.test(agesurvive)
#find the most influnsing factors
agesurvive2 = xtabs(~ member_casual + Total_Time, data = df)
chisq.test(agesurvive2)
pairs(df)
#find the most influnsing factors
agesurvive3 = xtabs(~ member_casual + start_station_id + end_station_id, data = df)
chisq.test(agesurvive3)
agesurvive3 = xtabs(~ member_casual + start_station_id + end_station_id, data = df)
chisq.test(agesurvive3)
#find the most influnsing factors
agesurvive3 = xtabs(~ member_casual + start_station_id , data = df)
chisq.test(agesurvive3)
#find the most influnsing factors
agesurvive4 = xtabs(~ member_casual + end_station_id , data = df)
chisq.test(agesurvive4)
bike <- list.files(pattern='*.csv')
bike <- list.files(pattern='*.csv')
bike$rideable_type <- factor(bike$rideable_type)
file.list <- list.files(pattern='*.csv')
sprice <-map_df(file.list)
library(purrr)#to join all files
sprice <-map_df(file.list)
file.list <- list.files(pattern='*.xlsx')
# need an id-column with the file-names
file.list <- setNames(file.list, file.list)
#want only sheet 4, skip 1 row and name id column month
sprice <-map_df(file.list, function(x) read_excel(x), .id = "month")
file.list <- list.files(pattern='*.csv')
# need an id-column with the file-names
file.list <- setNames(file.list, file.list)
#want only sheet 4, skip 1 row and name id column month
sprice <-map_df(file.list, function(x) read_excel(x), .id = "month")
file.list <- list.files(pattern='*.csv')
# need an id-column with the file-names
file.list <- setNames(file.list, file.list)
#want only sheet 4, skip 1 row and name id column month
sprice <-map_df(file.list, function(x) read.csv(x), .id = "month")
file.list <- list.files(pattern='*.csv')
# need an id-column with the file-names
file.list <- setNames(file.list, file.list)
#want only sheet 4, skip 1 row and name id column month
sprice <-map_df(file.list, function(x) read.csv(x))
#bike <- data.frame(read.csv("bo.csv"))
bike$rideable_type <- factor(bike$rideable_type)
View(sprice)
bike <- read.csv("bo.csv")
bike <- read.csv("bo3.csv")
str(bike)
str(bike)
bike$rideable_type <- factor(bike$rideable_type)
bike$member_casual <- factor(bike$member_casual)
#bind all the files in this path together
file.list <- list.files(pattern='*.csv')
# need an id-column with the file-names
file.list <- setNames(file.list, file.list)
#want only sheet 4, skip 1 row and name id column month
bike <-map_df(file.list, function(x) read.csv(x))
str(bike)
#bike <- data.frame(read.csv("bo.csv"))
bike$rideable_type <- factor(bike$rideable_type)
bike$member_casual <- factor(bike$member_casual)
# split started_at/ ended_at to date column and time column
# change start_date/end_date to date type
bike$start_time <- format(as.POSIXct(bike$started_at), format = "%H:%M")
bike$end_time <- format(as.POSIXct(bike$ended_at), format = "%H:%M")
bike$start_date <- as.Date(bike$started_at)
bike$end_date <- as.Date(bike$ended_at)
bike$Startedat = as.POSIXct(bike$started_at, format = "%Y-%m-%d %H:%M:%S")
bike$enddat = as.POSIXct(bike$ended_at, format = "%Y-%m-%d %H:%M:%S")
bike$Total_Time <- round(as.numeric(difftime(bike$enddat, bike$Startedat, units = "mins")),2)
#take the day to another column and delete the year and month
drop <- c('Startedat','enddat','started_at','ended_at', 'start_station_name', 'end_station_name', 'start_lat', 'end_lat', 'start_lng','end_lng')
df <- bike[,!(names(bike) %in% drop)]
agesurvive = xtabs(~ member_casual + rideable_type, data = df)
chisq.test(agesurvive)
agesurvive2 = xtabs(~ member_casual + Total_Time, data = df)
chisq.test(agesurvive2)
agesurvive3 = xtabs(~ member_casual + start_station_id , data = df)
chisq.test(agesurvive3)
agesurvive4 = xtabs(~ member_casual + end_station_id , data = df)
chisq.test(agesurvive4)
admitLogit <- glm(member_casual + end_station_id+start_station_id+Total_Time+rideable_type, data = bike, family = "binomial")
admitLogit <- glm(member_casual + end_station_id+start_station_id+Total_Time+rideable_type, data = df, family = "binomial")
admitLogit <- glm(member_casual ~ end_station_id+start_station_id+Total_Time+rideable_type, data = df, family = "binomial")
summary(admitLogit)
admitLogit <- glm(member_casual ~ end_station_id+Total_Time+rideable_type, data = df, family = "binomial")
summary(admitLogit)
admitLogit <- glm(member_casual ~ end_station_id+start_station_id+Total_Time+rideable_type, data = df, family = "binomial")
summary(admitLogit)
